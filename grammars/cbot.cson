'scopeName': 'source.cbot'
'fileTypes': [
  'cbot'
]
#'firstLineMatch': '^extern void object::.+(.*).*$'
'name': 'CBOT'
'patterns': [
  { 'include': '#instruction' }
  { 'include': '#function' }
  { 'include': '#this' }
  { 'include': '#type' }
  { 'include': '#constant' }
  { 'include': '#escaped-char' }
  { 'include': '#inline-comment' }
  { 'include': '#block-comment' }
  { 'include': '#string' }
  { 'include': '#number' }
]

'repository':
  'instruction': {
    'match': '''
        (?x)\\b(
              if|else|for|while|do|break|continue|return|
              extern|class|static|public|private|synchronized|new|
              switch|case|default
            )\\b
    '''
    'name': 'entity.name.instruction.cbot'
  }
  'function': {
    'match': '''
        (?x)\\b(
              sin|cos|tan|asin|acos|atan|atan2|
              sqrt|pow|rand|abs|floor|ceil|round|trunc|
              sizeof|retobject|errmode|busy|takeoff|research|factory|destroy|search|radar|
              direction|distance|distance2d|space|flatspace|flatground|
              canbuild|canresearch|researched|buildingenabled|build|
              wait|move|turn|goto|grab|drop|
              sniff|receive|send|deleteinfo|testinfo|
              thump|recycle|shield|fire|antfire|aim|motor|jet|
              topo|message|abstime|
              strlen|strleft|strright|strmid|strval|strfind|strlower|strupper|
              open|close|writeln|readln|eof|deletefile|openfile|
              pendown|penup|pencolor|penwidth|
              retobjectbyid|ismovie|ipf|camerafocus
            )\\b
    '''
    'name': 'entity.name.function.cbot'
  }
  'this': {
    'match': '\\b(this|super)\\b'
    'name': 'entity.this.cbot'
  }
  'type': {
    'match': '\\b(void|int|float|bool(ean)?|string|point|object|file)\\b'
    'name': 'storage.type.cbot'
  }
  'constant': {
    'match': '''
        (?x)\\b(
          (?# Language keywords)
            true|false|null|nan|
          (?# Buildings)
            Portico|SpaceShip|
            Derrick|Converter|
            (?# Buildable by player)
              Build(
                Derrick|Converter|
                (Nuclear|Power)Plant|
                BotFactory|PowerStation|RepairCenter|
                ResearchCenter|AutoLab|
                Destroyer|DefenseTower|PowerCaptor|
                RadarStation|ExchangePost
              )|
            Vault|Houston|Target(1|2)|(Start|Goal)Area|Barrier|
            AlienNest|
          (?# Resources)
            Titanium(Ore)?|UraniumOre|
            (Power|Nuclear)Cell|
          (?# Gameplay objects)
            OrgaMatter|BlackBox|Key(A|B|C|D)|TNT|Scrap|Mine|
            (Blue|Red|Green|Yellow|Violet)Flag|
            (Power|Titanium|Uranium|Key(A|B|C|D))Spot|
            WayPoint|
          (?# Robots)
            PracticeBot|TargetBot|Scribbler|
            (Wheeled|Tracked|Winged|Legged)(Grabber|Shooter|OrgaShooter|Sniffer)|
            PhazerShooter|Thumper|Recycler|Shielder|Subber|
          (?# Aliens)
            Me|
            Alien(Queen|Egg|Ant|Spider|Wasp|Worm)|
          (?# Other object-related)
            Wreck|FuelCell(Plant)?|Platinum(Ore|Spot)|
          (?# Grab/drop positions)
            InFront|Behind|EnergyCell|
          (?# Message types)
            Display(Error|Warning|Info|Message)|
          (?# Radar filters)
            Filter(None|OnlyLanding|OnlyFlying|Friendly|Enemy|Neutral)|Any|
          (?# Damage types)
            Explosion(None|Bang|Burn|Water)|
          (?# Statuses)
            Result(NotEnded|Lost|LostQuick|Win)|
          (?# Other)
            FlatGround|UseFlags|
          (?# Research types)
            Research(
              Tracked|Winged|Legged|
              (Orga|Phazer)Shooter|
              Thumper|Shielder|Recycler|Subber|Sniffer|
              DefenseTower|NuclearPlant|
            )|
          (?# Easter eggs)
            PolskiPortalColobota
        )\\b
    '''
    'name': 'constant.cbot'
  }
  'escaped-char': {
    'match': '\\\\\\\\'
    'name': 'none.cbot'
  }
  'inline-comment': {
    'begin': '//'
    'end': '$'
    'name': 'comment.inline.cbot'
  }
  'block-comment': {
    'begin': '/\\*'
    'end': '\\*/'
    'name': 'comment.block.cbot'
  }
  'string': {
    'begin': '"'
    'end': '"'
    'name': 'value.string.cbot'
  }
  'number': {
      'match': '\\b(0x[0-9A-Fa-f]*|[0-9]+\\.?[0-9]*)'
      'name': 'value.numeric.scene'
  }
